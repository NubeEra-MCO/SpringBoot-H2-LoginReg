name: Build and SonarQube Analysis

on:
  workflow_dispatch:
    inputs:
      sonar_project_key:
        description: 'SonarQube Project Key'
        required: false
        default: 'github-springboot2'
      sonar_project_name:
        description: 'SonarQube Project Name'
        required: false
        default: 'github-springboot2'
      sonar_host_url:
        description: 'SonarQube Server URL'
        required: false
        default: 'http://34.44.63.114:9000'
	  sonar_token:
        description: 'SonarQube Token (optional, overrides secrets.SONAR_TOKEN if provided)'
        required: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'
      
      - name: Set up Maven
        uses: stefanzweifel/setup-maven@v1
        with:
          maven-version: '3.8.6' # Adjust version as needed
      
      - name: Build and Analyze with SonarQube
        run: |
		  # Use input sonar_token if provided, otherwise fallback to secrets.SONAR_TOKEN
          SONAR_TOKEN=${{ github.event.inputs.sonar_token || secrets.SONAR_TOKEN }}
          if [ -z "$SONAR_TOKEN" ]; then
            echo "Error: SonarQube token is missing. Provide it via input or set secrets.SONAR_TOKEN."
            exit 1
          fi
		  # Verify Sonar Vulnerabilities
          mvn clean verify sonar:sonar \
            -Dsonar.projectKey=${{ github.event.inputs.sonar_project_key }} \
            -Dsonar.projectName=${{ github.event.inputs.sonar_project_name }} \
            -Dsonar.host.url=${{ github.event.inputs.sonar_host_url }} \
            -Dsonar.token=$SONAR_TOKEN
      
      - name: Check Quality Gate
        run: |
		  touch qg.json
          curl -s -u $SONAR_TOKEN: "${{ github.event.inputs.sonar_host_url }}/api/qualitygates/project_status?projectKey=${{ github.event.inputs.sonar_project_key }}" > qg.json
          STATUS=$(jq -r '.projectStatus.status' qg.json)
          if [ "$STATUS" == "OK" ]; then
            echo "Quality Gate passed!"
            exit 0
          else
            echo "Quality Gate failed: $STATUS"
            exit 1
          fi
