# .github/workflows/hello-world.yml

name: Hello World Action

# When this action will trigger
on:
  workflow_dispatch:

# Jobs to run
jobs:
  build-analyze:
    runs-on: ubuntu-latest
    
    steps:
      # Checks out your repository
      - uses: actions/checkout@v3
      
      # Set up JDK 17 (Spring Boot often uses Java 17, adjust if needed)
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'  # Eclipse Temurin distribution
          cache: 'maven'  # Cache Maven dependencies

      # Start SonarQube server using Docker
      - name: Start SonarQube
        run: |
          docker run -d --name sonarqube \
            -p 9000:9000 \
            -e SONAR_ES_BOOTSTRAP_CHECKS_DISABLE=true \
            sonarqube:community

      # Wait for SonarQube to be ready
      - name: Wait for SonarQube to be ready
        run: |
          timeout 120s bash -c "until curl -s http://localhost:9000/api/system/status | grep -q 'UP'; do sleep 5; echo 'Waiting for SonarQube...'; done"
          echo "SonarQube is up and running!"

      # Generate SonarQube token programmatically (default admin credentials: admin/admin)
      - name: Generate SonarQube Token
        id: sonar_token
        run: |
          TOKEN=$(curl -s -u admin:admin -X POST "http://localhost:9000/api/user_tokens/generate?name=gha-token" | jq -r '.token')
          echo "TOKEN=$TOKEN" >> $GITHUB_ENV
          echo "Generated SonarQube token: $TOKEN"

      # Build and analyze with Maven and SonarQube
      # - name: Build and SonarQube Scan
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      #     SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      #   run: |
      #     mvn clean verify sonar:sonar \
      #       -Dsonar.host.url=$SONAR_HOST_URL \
      #       -Dsonar.login=$SONAR_TOKEN \
      #       -Dsonar.projectKey=your-project-key \
      #       -Dsonar.projectName="Your Spring Boot Project"

      # Optional: Cache SonarQube packages for faster runs
      # - name: Cache SonarQube packages
      #   uses: actions/cache@v3
      #   with:
      #     path: ~/.sonar/cache
      #     key: ${{ runner.os }}-sonar
      #     restore-keys: ${{ runner.os }}-sonar
